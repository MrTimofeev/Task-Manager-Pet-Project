name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Клонирование репозитория
      - uses: actions/checkout@v2

      # Шаг 2: Установка Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      # Шаг 3: Кэширование зависимостей
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      # Шаг 4: Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # Шаг 5: Запуск black (проверка форматирования)
      - name: Run black
        run: |
          cd task_manager
          black --check . || true

      # Шаг 6: Автоматическое форматирование black (если проверка не прошла)
      - name: Format code with black
        if: failure() && steps.black.outcome == 'failure'
        run: |
          cd task_manager
          black .
          echo "Code formatted with black. Please commit the changes."

      # Шаг 7: Запуск isort (проверка сортировки импортов)
      - name: Run isort
        run: |
          cd task_manager
          isort --check-only . || true

      # Шаг 8: Автоматическая сортировка импортов isort (если проверка не прошла)
      - name: Sort imports with isort
        if: failure() && steps.isort.outcome == 'failure'
        run: |
          cd task_manager
          isort .
          echo "Imports sorted with isort. Please commit the changes."

      # Шаг 9: Запуск flake8
      - name: Run flake8
        run: |
          cd task_manager
          flake8 .

      # Шаг 10: Запуск тестов
      - name: Run tests
        run: |
          cd task_manager
          python manage.py test